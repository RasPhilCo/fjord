#!/usr/bin/env bash

get_script_dir () {
  SOURCE="${BASH_SOURCE[0]}"
  # While $SOURCE is a symlink, resolve it
  while [ -h "$SOURCE" ]; do
      DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"
      SOURCE="$( readlink "$SOURCE" )"
      # If $SOURCE was a relative symlink (so no "/" as prefix, need to resolve it relative to the symlink base directory
      [[ $SOURCE != /* ]] && SOURCE="$DIR/$SOURCE"
  done
  DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"
  echo "$DIR"
}

set_nodejs_build_script () {
language_build_script="
NPM_CONFIG_PRODUCTION=false NODE_ENV=development /fjord/builds/nodejs/compile;
echo NPM_CONFIG_PRODUCTION=false >> /root/.profile.d/nodejs.sh;
echo NODE_ENV=development >> /root/.profile.d/nodejs.sh;
source /root/.profile.d/nodejs.sh;
npm install -g nf;
"
}

set_python_build_script () {
language_build_script="
/fjord/builds/python/compile;
echo \"export PATH=/app/.heroku/python/bin:\$PATH\" >> /app/.profile.d/python.sh
source /app/.profile.d/python.sh;
source /app/.profile.d/python.gunicorn.sh;
pip install honcho;
"
}

set_language () {
  if [ -f "package.json" ]; then
    language='nodejs'
  elif [ -f "./Gemfile" ]; then
    echo 'ruby coming soon!'
    exit 0
  elif [ -f "./requirements.txt" ]; then
    language='python'
  fi
}

set_build_script () {
build_script="
$language_build_script
/fjord/builds/$language/deps $deps;
echo '';
echo '-----> Exporting $language env vars to bash';
echo '';
echo '-----> Change directory to app source';
cd /src && echo '';
bash;
"
}

start_runner () {
  local cmd=$1
  local port=$2
  local deps="${@:3}"
  local app_dir=`pwd`
  local language

  set_language;

  if [ -n $language ]; then
    echo "Building $language app in $app_dir"

    local build_script
    local language_build_script
    set_${language}_build_script;
    set_build_script;

    echo $(get_script_dir)

    docker run -p 127.0.0.1:$port:$port \
                -v "$(get_script_dir)/packs/heroku-buildpack-$language":/buildpack:ro \
                -v $(get_script_dir):/fjord:ro \
                -v ${app_dir}:/src:rw \
                --rm \
                -it \
                -e "STACK=heroku-16" \
                heroku/heroku:16 \
                bash -c "$build_script"
    exit 0
  fi
  exit 1
}


start_runner $@;
