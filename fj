#!/usr/bin/env bash

get_script_dir () {
  SOURCE="${BASH_SOURCE[0]}"
  # While $SOURCE is a symlink, resolve it
  while [ -h "$SOURCE" ]; do
      DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"
      SOURCE="$( readlink "$SOURCE" )"
      # If $SOURCE was a relative symlink (so no "/" as prefix, need to resolve it relative to the symlink base directory
      [[ $SOURCE != /* ]] && SOURCE="$DIR/$SOURCE"
  done
  DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"
  echo "$DIR"
}

nodejs_build_script () {
echo "NPM_CONFIG_PRODUCTION=false NODE_ENV=development /fjord/builds/nodejs/compile;
echo \"NPM_CONFIG_PRODUCTION=false;NODE_ENV=development\" >> /root/.profile.d/nodejs.sh;
source /root/.profile.d/nodejs.sh;
# npm install -g nf;
"
}

python_build_script () {
echo "/fjord/builds/python/compile;
echo \"export PATH=/app/.heroku/python/bin:\$PATH\" >> /app/.profile.d/python.sh
source /app/.profile.d/python.sh;
source /app/.profile.d/python.gunicorn.sh;
pip install honcho;
"
}

determine_languages () {
  if [ -f "./Gemfile" ]; then
    echo 'ruby coming soon!'
    exit 0
  fi
  if [ -f "./requirements.txt" ]; then
    languages="$languages python"
  fi
  if [ -f "package.json" ]; then
    languages="$languages nodejs"
  fi
}

# $language_build_script
# /fjord/builds/$language/deps $deps;
# echo \"\n-----> Exporting $language env vars to bash\";
# bash;

start_runner () {
  local cmd=$1
  local port=$2
  local deps="${@:3}"
  local app_dir=`pwd`
  local languages=""

  determine_languages;

  if [[ ! -z $languages ]]; then
    combined_language_script=""

    for language in $languages; do
      echo found: $language app
      combined_language_script="$combined_language_script $("$language"_build_script)"
    done

    build_script="$combined_language_script;
      echo '-----> Change directory to app source';
      echo '';
      cd /src;
      bash;"

    # echo $combined_build_script;
    # echo $build_script

    docker run -p 127.0.0.1:$port:$port \
                -v "$(get_script_dir)/buildpacks":/buildpacks:ro \
                -v $(get_script_dir):/fjord:ro \
                -v ${app_dir}:/src:rw \
                --rm \
                -it \
                -e "STACK=heroku-16" \
                heroku/heroku:16 \
                bash -c "$build_script"
  fi
  exit 1
}


start_runner $@;
